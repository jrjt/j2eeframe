package ${bussiPackage}.${entityPackage}.controller;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.beanutils.PropertyUtils;
import org.apache.commons.lang.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import com.sunshineroad.framework.core.common.controller.BaseController;
import com.sunshineroad.framework.util.ResponseUtils;
import com.sunshineroad.framework.util.WebUtils;
import com.sunshineroad.fes.hr.user.model.UserModel;


import com.sunshineroad.fes.hr.user.model.UserModel;
import com.sunshineroad.fes.hr.user.service.UserService;
import com.sunshineroad.fes.hr.user.vo.UserModelVo;

import ${bussiPackage}.${entityPackage}.entity.${entityName};
import ${bussiPackage}.${entityPackage}.entityvo.${entityName}Vo;
import ${bussiPackage}.${entityPackage}.service.${entityName}Service;
import org.apache.log4j.Logger;
/**   
 * @Title: Controller
 * @Description: ${ftl_description}
 * @author auto Generate
 * @date ${ftl_create_time}
 * @version V1.0   
 *
 */
 
 
	
@Controller
@RequestMapping(value="${entityName?uncap_first}s")
public class ${entityName}Controller extends BaseController {
	/**
	 * Logger for this class
	 */
	private static final Logger logger = Logger.getLogger(${entityName}Controller.class);

	public ${entityName}Controller(){		
	}

	
    @Autowired
    @Qualifier("UserService")
    private UserService userService;   
    
	@Autowired
	private ${entityName}Service ${entityName?uncap_first}Service;
 
 @RequestMapping(method=RequestMethod.GET)
	public @ResponseBody Object list( ){
	//	HttpServletRequest request = ((ServletRequestAttributes)RequestContextHolder.getRequestAttributes()).getRequest();
		 HttpServletRequest request =WebUtils.getRequestByContext();
		${entityName} ${entityName?uncap_first}= new ${entityName}();
	/*	String username=request.getParameter("username");
		String loginName=request.getParameter("loginName");
		//System.out.println("000000000000000000000"+username);
		if(StringUtils.isNotBlank(username)){
			${entityName?uncap_first}.setUsername(username);
		}
		if(StringUtils.isNotBlank(loginName)){
			${entityName?uncap_first}.setLoginName(loginName);
		}*/
		return ResponseUtils.sendPagination(${entityName?uncap_first}Service.list(${entityName?uncap_first})) ;
	}
 
	@RequestMapping(value="{id}", method=RequestMethod.PUT)
	public @ResponseBody Object update(@RequestBody ${entityName}Vo ${entityName?uncap_first}Vo) throws Exception{
		${entityName} ${entityName?uncap_first} =new ${entityName}();
		PropertyUtils.copyProperties(${entityName?uncap_first}, ${entityName?uncap_first}Vo);
		this.${entityName?uncap_first}Service.update(${entityName?uncap_first});
		return ResponseUtils.sendSuccess("保存成功");
	}
	
	@RequestMapping(method=RequestMethod.POST)
	public @ResponseBody Object save(@RequestBody ${entityName}Vo ${entityName?uncap_first}Vo) throws Exception{
		${entityName} ${entityName?uncap_first} =new ${entityName}();
		PropertyUtils.copyProperties(${entityName?uncap_first}, ${entityName?uncap_first}Vo);
		return ResponseUtils.sendSuccess("保存成功",this.${entityName?uncap_first}Service.save(${entityName?uncap_first}));
	}
	
	@RequestMapping(value="{id}",method=RequestMethod.DELETE)
	public @ResponseBody Object delete(@RequestBody ${entityName} ${entityName?uncap_first}) throws Exception{
		this.${entityName?uncap_first}Service.delete(${entityName?uncap_first});
		return ResponseUtils.sendSuccess("删除成功");
	}
    
	public UserModel  getSelfUserModelBy(){
		return userService.getSelfUserModelBy();
	}
  
  
}
